---
- hosts: all
  # Workaround for apt-get bug
  # https://bugs.launchpad.net/ubuntu/+source/ansible/+bug/1833013
  # https://github.com/hashicorp/vagrant/issues/10914
  environment:
    DEBIAN_FRONTEND: "noninteractive"
  vars_files:
    - vars/clojurians_log_secrets.yml
  become: true
  vars:
    database_name: "clojurians_log_datomic"
    database_user: "clojurians_log"
    database_hostname: "localhost"
    database_port: 5432
    clojurians_app_http_port: 4242
    datomic_pro_version: 0.9.5561.56
    datomic_object_cache_max: 2g
    clojure_app_env_vars: |
      JVM_OPTS="-Dclojure.server.myrepl={:port,50505,:accept,clojure.core.server/repl} -Xmx8g -Xms2g -Ddatomic.ObjectCacheMax=7g -Ddatomic.memcachedServers=127.0.0.1:11211"
  tasks:
    # Keys first, then repos, then the dist-upgrade.
    - name: Add repository for ansible
      apt_repository:
        repo: ppa:ansible/ansible
        state: present
    - name: Install the lastest versions of listed packages
      apt:
        name: "{{ item }}"
        state: latest
        update_cache: yes
      loop:
        - ansible
        - curl
        - emacs
        - git
        - htop                  # To view processes
        - openjdk-8-jdk         # For Clojure
        - python3
        - python3-pip
        - rlwrap                # For clj
        - screen
        - unzip                 # for ansible unarchive module
    - name: Purge installed apps
      apt:
        name: "{{ item }}"
        state: absent
        purge: yes
      loop:
        - ubuntu-web-launchers  # to remove Amazon icon from launcher
    - name: Do a dist-upgrade
      apt:
        upgrade: dist
        update_cache: yes
    # Unfortunately, the apt version of lein is quite old.
    - name: Set up Leiningen
      import_role:
        name: leiningen
    # Too bad we cannot use the alternatives module
    # as it would require listing each java command.
    - name: Check if jdk8 is default
      command: update-alternatives --display java
      register: chkjava
      changed_when: false
      check_mode: false
    - name: Choose jdk8 as default for Clojure
      command: update-java-alternatives --set java-1.8.0-openjdk-amd64
      when: chkjava.stdout.find('link currently points to /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java') == -1
    # Clean up
    - name: Remove unneeded apt stuff
      apt:
        autoremove: yes
    # Firewall settings
    - name: Set firewall settings to allow ssh, http/s
      import_role:
        name: firewall
    #########
    # Now set up the users
    - name: Set up plexus
      import_role:
        name: setup_user
      tags: setup_user
      vars:
        username: plexus
        full_name: Arne Brasseur
        github_username: plexus
    - name: Set up lispyclouds
      import_role:
        name: setup_user
      tags: setup_user
      vars:
        username: lispyclouds
        full_name: Rahul De
        github_username: lispyclouds
    - name: Set up victorb
      import_role:
        name: setup_user
      tags: setup_user
      vars:
        username: victorb
        full_name: Victor Bjelkholm
        github_username: victorb
    - name: Set up dorab
      import_role:
        name: setup_user
      tags: setup_user
      vars:
        username: dorab
        full_name: Dorab Patel
        github_username: bombaywalla
    # TODO: might want to remove some users such as vagrant or ubuntu??
    # Harden sshd. Note: This MUST come after at least one sudoable user having a pubkey login.
    - name: Harden sshd
      import_role:
        name: harden_sshd
    # Now install the programs
    - name: Install memcached
      import_role:
        name: geerlingguy.memcached
      tags: memcached
      vars:
        memcached_memory_limit: 4096
    - name: Install postgres
      import_role:
        name: geerlingguy.postgresql
      tags: postgres
      vars:
        postgresql_databases:
          - name: "{{ database_name }}"
        postgresql_users:
          - name: "{{ database_user }}"
            password: "{{ database_password }}"
            db: "{{ database_name }}"
            priv: "ALL"
    - name: Install datomic-pro
      import_role:
        name: plexus.datomic-pro
      tags: datomic
      vars:
        datomic_memcached: 127.0.0.1:11211
    # Now the Clojurians Log app stuff
    - name: Install the Clojure Web app
      import_role:
        name: plexus.clojure-web-app
      tags: clojure-web-app
      vars:
        clojure_app_authorized_keys: |
          ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCf99gah0qnmLQn3yix8NFk2JsV0kHTzciLLHVUFfJmCsb4sHY4yKAuiMfp9E0s71tIsmVfw9GdNfhit/nHqQG/VGjgYSR4zIRD0Rr0V5GrDsSS/jWotNfb0JXt+Up310BE/diL7vi8uTwe3t5THymiuibFLgoaHvnbFE1VYojpyiGcSOGmE9GrDOuN08mg2ynb6FAK2/tnfo+ZBwl7g3A9pMvjHUwRzFyq+Z+Mdmf8c8x4qLrikUNv/U3TL1WPXUB4rwiUwhnRqadR/uBGYUwWJ1vfh4wl1aZqnyVRM3YfDmb5720m2IXX1MPH0CDio8moT9bwIfSRyBUt3zDuft/R arne@twoflower
          ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCz8V7FdhmQ6GSwc8tC3+VyIa1MrUX8FYnwJs7Lg4hddnJAPWe2N+J5N2gSCfRIBFAco0K9juBxX28Em5kK8Jzq8d0DaNyQ4jw3NkkIWFEoYcFto6wUu+9fmj74GrMYwFqkrHukB1biwjMwAsrRbb6kKISqbZJq1D+bkZYIFk48/jjL0iMF00R4aViqTrUr/l6wbae74+bEOlZPJiFItvJfD5RBHdfkrM+nviDWva6YUceHzg4XA9G2Ot7kV/WHsDlHyohMBnxrNucBqvusolpp4aSQ8sDevl3euwx8WXnYp+QQNYkkhwcwfyqMWPSQ4H2BhQfWvUb6779mpyRezPFIja/ulcekLwWWQ+Btc8+96p7fSwRt9WNHBCVy9hrw8AWy5B59nDIX426xjHV6zyul4uN1DwaMmh9N3TUFbk9zu6aVWkgW0RdrAyadPNtcbJYzjxbnWVac5nao7SnJKMLVE3fLwpVUDGsGQsKYiej6QhEqoNIyrsv/EoX/I0h+TInGRSVswhQjrp+ccYSYtgmRdqmtPTQGqvYiMW2873cL4DLK31lDeLXBqq+FYmoV3F/QcY8YK68try4N3pJPsWw88RsSVPO7Ok3fmpGuahdje/0G9bGI0BGHc79G278ztBIrQ20Wzjq6xGOhicENcVNivMmc1vhHWuGc65S6dSclMw==
          ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDMOBeiZnugxLNgt4sJZPMVzrW3sMpkB2PFv9V4ESW5FZEJPsV0Q09XAfFQL8RxWB0UFMZk43lqImfXoxpLrMyAOa2/sco/2r0uEGtLscYAg6HwCuaXnZeuMwByYIrUSfmZPd7mGo1GYqP5gVfuaKkAVnIplXK5khQL4Ix+aJADDmUdWrBWVeP4KlqfDWM7DCcc8nF9+8C8Wu6uE5a8Zn2c25laML472F3havXysj8lp+VRz2KOSSpVYLOifYajbQH2GaxuynLOny6+vOIVO1LQf5Do+RgWT70sWUdb9S+kjwqlijFUTTvzXuA5cSHReS8h9wtcSRra4qlWpcGr0O0BET1o7CWJXbmmBhtsj+yjR0rR5Xt5/tqEVrHCImdL+ggDmn4wQbRDCRTO6EcnZNiPgdRuve73gguzAFKCINMId3L/ttqOnjn8Bjis046ypKwvSvkan75tJ3/ZpMYSCop51ULdPG8UvdJjH6x75e94S8iH7UYU5c1gFXE+ciukkyyje2ldoaD3zZLUFAWc7XZSZ6iQCvEQCZx32suqgbBzQ4jgoLuxBY7Lpe2sedYGbixBGALgd7jbzG+3NwQeNFOcifbJ/ncPdtpIuYYsKzWtxcJSeOiWqzZWaSkHIqP4TGOgd9GNgedmg/AeeubgDqkN+wI5wy/DynZb0jdtzOZfSQ==
          ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/R/GBWvIuX1pU7afNEdvkTryI9IdYSQWLqtxjyeOK1ygTXQcUpEKo3HLuUJXF9zdv1OtLI/UgEwp/GpfcUkzJsPmYwaSi4QqZjh8RyPkZpyWgydqdkQ7HR5MGJqeX867IEocamwh34qYLeYiS+hopphFdHJ6oiwVZVYbh/L/CJPPfE38yIBYK+F7hIi5exkNFRMHQhip9RYanhttv1xpnJPb0QC8s3BvIg+386PwHLLtzPpJaGbePQukCOz5NCVjuazn3x3ZaXBl5sx1ys1JDBmhGThLXtetQPjoHmSf96BqxuEwUH5pPhXQnmcCPTmfzF44/h0YPnzLtjauGkETy4SUOWvfFC0tZyfd8BkJxTREklm6L92TUoiV0TuYo5K0BU2Rip9gBXZsB/sH5MoS+r1h2xHA7/j0GsfEWlDO2w4lxhkU0mWZz0g7TrRU24apUgimxgN6Wv6bQqrC0m/WiPNvgGbE8nprcuHTry4JQbjvEoYXcwvIplEEtgR1TfCzY9gMFuPj0lEepUYa9RKlbfIwOHoanteeyT2EUxjJFqTLay5r1Lw5ez/T5hU+Sr7//uUEwDqnSPLPFqh/OgzN5h8FAdHnhkBPDbgUJ8cWgOqnnLrPDVPUFw83wz4khtNGs3VySKUeszeZoPoiDWX878ufOpMGpIYItDCbDXpFmVQ==
          ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC1OMZKelrmjpvnsvNcME+tRCjCrY8e3whH/CPKoqgEla9ykc41w1yQ1rTI/YAKMh/ltzkSF0cqLZmBiGDnkf4qxVSIyUeLFfTXmUeSYFkqKfmglFs1778ObI5KeFjbV/T0P+7KJWpyFlNapdOVXc7p8+VflVmWMZnuqRQCBYEtsCwwfENoZdiX+lrOMGn0WOuFnbvGB7iqMBt8C7X/JKa1gRgUtjEG9VKUqDlqOeXzFedWTQH7Bo9NKtAJcyL/la+/PyjWyZli3RutWsfP2F0GZOeYcpPMF61y92fYIeBG6uIMgW/YFE+SdDfd1nsYyZYyA3p+AfVHAGt/Txchgix/
          ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGJ0uhdAiJ++6JJ8DdnlmY3km/AM0RZTi/vtKiPiae+B
        clojure_app_main_command: "/usr/local/bin/lein with-profile +production,-dev run {{ clojure_app_home_dir }}/config.edn"
        clojure_app_health_check_url: "http://localhost:{{clojurians_app_http_port}}/healthcheck"
        clojure_app_service_start_after: datomic.service
    - name: Install the Clojurians Log app
      import_role:
        name: plexus.clojurians-log
      tags: clojurians-log
    # Nginx
    - name: Install and configure nginx
      tags: nginx
      import_role:
        name: geerlingguy.nginx
      vars:
        nginx_remove_default_vhost: true
        nginx_extra_http_options: |
          proxy_buffering    off;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Scheme $scheme;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   Host $http_host;
        nginx_vhosts:
          - listen: 80
            server_name: "localhost"
            nginx_access_log: off
            extra_parameters: |
              location / {
                  root {{ clojure_app_app_dir }}/resources/public;
                  try_files $uri @proxy_app;
                  expires max;
                  if ($request_filename ~ "^.*/([^/]+\.(zip|tgz|iso|gz|vcf))$"){
                    set $fname $1;
                    add_header Content-Disposition 'attachment; filename="$fname"';
                  }

              }
              location @proxy_app {
                  proxy_pass http://localhost:{{ clojurians_app_http_port }};
                  proxy_read_timeout 90;
                  proxy_redirect http://localhost:{{ clojurians_app_http_port }} https://clojurians-log.clojureverse.org;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }

    - name: Setup and config rtmbot
      tags: rtmbot
      import_role:
        name: plexus.rtmbot
